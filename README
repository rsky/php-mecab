This is a standalone PHP extension created using CodeGen_PECL 1.0.0

HACKING
=======

There are two ways to modify an extension created using CodeGen_PECL:

1) you can modify the generated code as with any other PHP extension

2) you can add custom code to the CodeGen_PECL XML source and re-run pecl-gen

The 2nd approach may look a bit complicated but you have be aware that any
manual changes to the generated code will be lost if you ever change the
XML specs and re-run PECL-Gen. All changes done before have to be applied
to the newly generated code again.
Adding code snippets to the XML source itself on the other hand may be a
bit more complicated but this way your custom code will always be in the
generated code no matter how often you rerun CodeGen_PECL.


BUILDING ON UNIX etc.
=====================

To compile your new extension, you will have to execute the following steps:

1.  $ ./phpize
2.  $ ./configure [--with-mecab]
3.  $ make
[4. $ make test ] # NOTE: this doesn't work right now *)
5.  $ [sudo] make install

*) this is a general problem with "make test" and standalone extensions
   (that is being worked on) so please don't blame CodeGen_PECL for this



BUILDING ON WINDOWS
===================

The extension provides the VisualStudio V6 project file

  mecab.dsp
To compile the extension you open this file using VisualStudio,
select the apropriate configuration for your installation
(either "Release_TS" or "Debug_TS") and create "php_mecab.dll"

After successfull compilation you have to copy the newly
created "php_mecab.dll" to the PHP
extension directory (default: C:\PHP\extensions).


TESTING
=======

You can now load the extension using a php.ini directive

  extension="php_mecab.[so|dll]"

or load it at runtime using the dl() function

  dl("php_mecab.[so|dll]");

The extension should now be available, you can test this
using the extension_loaded() function:

  if (extension_loaded(mecab))
    echo "mecab loaded :)";
  else
    echo "something is wrong :(";

The extension will also add its own block to the output
of phpinfo();

